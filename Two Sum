Problem.> 
  Two Sum
  
  Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].



==========================================================================

solution 1. > 

var twoSum = function(nums, target) {
     var map = {};
    nums.forEach((num,index) => {
        map[num] = index;
    });
    
    for(let i=0; i< nums.length; i++) {
        if(map[target - nums[i]] && map[target - nums[i]] !== i) {
            return [i, map[target - nums[i]]]
        }
    }
    
    
};

time complexity O(n) but two for loops are there
-------------------------------------------
solution 2. (more optimized one)

time complexity O(n) but one for loops are there
var twoSum = function(nums, target) {
    
    for(let i=0; i< nums.length; i++) {
        if(map[nums[i]] === undefined) map[nums[i]] = i;
        if(map[target - nums[i]]!== undefined && map[target - nums[i]] !== i) {
            return [i, map[target - nums[i]]]
        }
    } 
};
