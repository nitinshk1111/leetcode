Problem->

Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output: 321
Example 2:

Input: -123
Output: -321
Example 3:

Input: 120
Output: 21
Note:
Assume we are dealing with an environment which could only
store integers within the 32-bit signed integer range: [−231,  231 − 1].
For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.
=================================================================
Solution
=================================================================
approach 1 without converting to string
----------------------------------------
var reverse = function(x) {
    var negativeNumber = false;
    if(x< 0) {
        negativeNumber = true;
        x = x * -1;
    }
    var resp;
    resp = (x % 10);
    x = Math.floor(x/10);
    while(x  > 0) {
        resp = (resp *10)+ (x % 10);
        x = Math.floor(x/10);
    }
    if (Number(resp) > 0x7FFFFFFF) {
        return 0;
    }
    return negativeNumber ? Number(resp) * -1 : Number(resp);
};

----------------------------------------------------------------
approach 2 with converting number to string
---------------------------------------------------------------

var reverse = function(x) {
    var negativeNumber = false;
    if(x< 0) {
        negativeNumber = true;
        x = x * -1;
    }
    var resp;
    resp = (x % 10) + '';
    x = Math.floor(x/10);
    while(x  > 0) {
        resp = resp + (x % 10);
        x = Math.floor(x/10);
    }
    if (Number(resp) > 0x7FFFFFFF) {
        return 0;
    }
    return negativeNumber ? Number(resp) * -1 : Number(resp);
};
